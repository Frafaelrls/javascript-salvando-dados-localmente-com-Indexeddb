{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["NegociacoesView","elemento","model","negociacoes","map","DateHelper","dataParaTexto","negociacao","data","quantidade","valor","volume","join","total","forEach","volumeTotal","View"],"mappings":";;;;;;;;;;IAAMA,e;;;AAEF,6BAAYC,QAAZ,EAAsB;AAAA;;AAAA,iIACZA,QADY;AAErB;;;;iCAEQC,K,EAAO;AACZ,+iBAWUA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB;AAAA,0GAGVC,WAAWC,aAAX,CAAyBC,WAAWC,IAApC,CAHU,2CAIVD,WAAWE,UAJD,2CAKVF,WAAWG,KALD,2CAMVH,WAAWI,MAND;AAAA,aAAtB,EASKC,IATL,CASU,EATV,CAXV,6cAiCa,YAAW;AACR,oBAAIC,QAAQ,CAAZ;AACAX,sBAAMC,WAAN,CAAkBW,OAAlB,CAA0B;AAAA,2BAAcD,SAASN,WAAWI,MAAlC;AAAA,iBAA1B;AACA,uBAAOE,KAAP;AACH,aAJD,EAjCZ,gqBAmDcX,MAAMa,WAnDpB;AA2DH;;;;EAlEyBC,I","file":"NegociacoesView.js","sourcesContent":["class NegociacoesView extends View {\r\n\r\n    constructor(elemento) {\r\n        super(elemento);\r\n    }\r\n\r\n    template(model) {\r\n        return `\r\n        <table class=\"table table-hover table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th onclick=\"negociacaoController.ordena('data')\">DATA</th>\r\n                    <th onclick=\"negociacaoController.ordena('quantidade')\">QUANTIDADE</th>\r\n                    <th onclick=\"negociacaoController.ordena('valor')\">VALOR</th>\r\n                    <th onclick=\"negociacaoController.ordena('volume')\">VOLUME</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                ${model.negociacoes.map(negociacao => `\r\n                    \r\n                    <tr>\r\n                        <td>${DateHelper.dataParaTexto(negociacao.data)}</td>\r\n                        <td>${negociacao.quantidade}</td>\r\n                        <td>${negociacao.valor}</td>\r\n                        <td>${negociacao.volume}</td>\r\n                    </tr>\r\n                    \r\n                    `).join('')}\r\n            </tbody>\r\n            \r\n            <tfoot>\r\n            <tr>\r\n            <td colspan='3'>Total usando Immediately-invoked function expression (IIFE):</td>\r\n\r\n                <!-- \r\n                    Usando uma Immediately-invoked function expression (IIFE)  \r\n                    Sintaxe: (function(){})()    \r\n                    Essa função é uma função auto-invocada \r\n                 -->    \r\n                <td>${\r\n                    (function() {\r\n                        let total = 0;\r\n                        model.negociacoes.forEach(negociacao => total += negociacao.volume);\r\n                        return total;\r\n                    })()\r\n                }</td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan='3'>Total usando o paradigma funcional:</td>\r\n\r\n                <!-- \r\n                    A função reduce() processa o array e retorna um único resultado     \r\n                    Ela recebe uma função como primeiro parâmetro e o valor inicial como segundo parâmetro  \r\n                    A função terá os seguintes parâmetros: \r\n                        total - Variável que irá acumular o valor a cada interação   \r\n                        negociacao - Elemento da lista   \r\n                -->    \r\n                <td>\r\n                    ${model.volumeTotal}\r\n                </td>\r\n            </tr>\r\n\r\n                \r\n            </tfoot>\r\n        </table>\r\n        `;\r\n    }\r\n\r\n}"]}