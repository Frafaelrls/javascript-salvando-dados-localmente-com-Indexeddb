{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","data","quantidade","valor","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","continue","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AAEH;;;;iCAEQC,U,EAAY;AAAA;;AAEjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAEL,EAAEC,MAAMR,WAAWQ,IAAnB,EAAyBC,YAAYT,WAAWS,UAAhD,EAA4DC,OAAOV,WAAWU,KAA9E,EAFK,CAAd;;AAIAN,wBAAQO,SAAR,GAAoB,aAAK;;AAErBT;AACH,iBAHD;;AAKAE,wBAAQQ,OAAR,GAAkB,aAAK;;AAEnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAd,2BAAO,0CAAP;AACH,iBAJD;AAMH,aAjBM,CAAP;AAmBH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIe,SAAS,OAAKpB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRoB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;;AAEpB;AACA,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAW;;AAEP,4BAAIE,OAAOF,MAAMG,KAAjB;AACA;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKf,IAApB,EAA0Be,KAAKd,UAA/B,EAA2Cc,KAAKb,KAAhD,CAAjB;;AAEAW,8BAAMM,QAAN;AAEH,qBARD,MAQO;;AAEHzB,gCAAQkB,WAAR;AACH;AACJ,iBAjBD;;AAmBAF,uBAAON,OAAP,GAAiB,aAAK;;AAElBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAd,2BAAO,wCAAP;AACH,iBAJD;AAMH,aAlCM,CAAP;AAoCH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnC,oBAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,CAAC,OAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb6B,KAHa,EAAd;;AAKAxB,wBAAQO,SAAR,GAAoB;AAAA,2BAAKT,QAAQ,kCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQQ,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAf,4BAAQ,wCAAR;AACH,iBAHD;AAKH,aAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes'\r\n\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection.transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add({ data: negociacao.data, quantidade: negociacao.quantidade, valor: negociacao.valor });\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negociação;');\r\n            };\r\n\r\n        });\r\n\r\n    }\r\n\r\n    listaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                // ponteiro para o objeto atual\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n\r\n                    let dado = atual.value;\r\n                    // Cria um novo objeto com os dados salvos no banco \r\n                    negociacoes.push(new Negociacao(dado.data, dado.quantidade, dado.valor));\r\n\r\n                    atual.continue();\r\n\r\n                } else {\r\n\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n\r\n                console.log(e.target.error);\r\n                reject('Não foi possível listar as negociações')\r\n            };\r\n\r\n        });\r\n\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) =>{\r\n            let request = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n            .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n            \r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                resolve('Não foi possível apagar as negociações');\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n}"]}